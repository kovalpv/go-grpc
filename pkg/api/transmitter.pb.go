// Code generated by protoc-gen-go. DO NOT EDIT.
// source: transmitter.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SendRequest struct {
	Time                 string    `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Timeline             []string  `protobuf:"bytes,2,rep,name=timeline,proto3" json:"timeline,omitempty"`
	Values               []float32 `protobuf:"fixed32,3,rep,packed,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SendRequest) Reset()         { *m = SendRequest{} }
func (m *SendRequest) String() string { return proto.CompactTextString(m) }
func (*SendRequest) ProtoMessage()    {}
func (*SendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2827fe02ce03bde9, []int{0}
}

func (m *SendRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendRequest.Unmarshal(m, b)
}
func (m *SendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendRequest.Marshal(b, m, deterministic)
}
func (m *SendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendRequest.Merge(m, src)
}
func (m *SendRequest) XXX_Size() int {
	return xxx_messageInfo_SendRequest.Size(m)
}
func (m *SendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendRequest proto.InternalMessageInfo

func (m *SendRequest) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *SendRequest) GetTimeline() []string {
	if m != nil {
		return m.Timeline
	}
	return nil
}

func (m *SendRequest) GetValues() []float32 {
	if m != nil {
		return m.Values
	}
	return nil
}

type SendResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendResponse) Reset()         { *m = SendResponse{} }
func (m *SendResponse) String() string { return proto.CompactTextString(m) }
func (*SendResponse) ProtoMessage()    {}
func (*SendResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2827fe02ce03bde9, []int{1}
}

func (m *SendResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendResponse.Unmarshal(m, b)
}
func (m *SendResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendResponse.Marshal(b, m, deterministic)
}
func (m *SendResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendResponse.Merge(m, src)
}
func (m *SendResponse) XXX_Size() int {
	return xxx_messageInfo_SendResponse.Size(m)
}
func (m *SendResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendResponse proto.InternalMessageInfo

func (m *SendResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*SendRequest)(nil), "api.SendRequest")
	proto.RegisterType((*SendResponse)(nil), "api.SendResponse")
}

func init() {
	proto.RegisterFile("transmitter.proto", fileDescriptor_2827fe02ce03bde9)
}

var fileDescriptor_2827fe02ce03bde9 = []byte{
	// 180 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0xbd, 0xae, 0x83, 0x30,
	0x0c, 0x85, 0x2f, 0x04, 0x71, 0xc1, 0xdc, 0xe1, 0xe2, 0xa1, 0x8a, 0x98, 0x10, 0x53, 0x96, 0x32,
	0xb4, 0x6b, 0x9f, 0x22, 0xb4, 0x0f, 0x90, 0x52, 0x0f, 0x91, 0x20, 0xa4, 0x24, 0xf4, 0xf9, 0x2b,
	0xa0, 0x3f, 0x4c, 0xf6, 0x67, 0xc9, 0x9f, 0xce, 0x81, 0xdc, 0x8f, 0xca, 0xb8, 0x5e, 0x7b, 0x4f,
	0x63, 0x6d, 0xc7, 0xc1, 0x0f, 0xc8, 0x94, 0xd5, 0xd5, 0x05, 0xb2, 0x86, 0xcc, 0x4d, 0xd2, 0x7d,
	0x22, 0xe7, 0x11, 0x21, 0xf2, 0xba, 0x27, 0x1e, 0x94, 0x81, 0x48, 0xe5, 0xb2, 0x63, 0x01, 0xc9,
	0x3c, 0x3b, 0x6d, 0x88, 0x87, 0x25, 0x13, 0xa9, 0xfc, 0x30, 0xee, 0x20, 0x7e, 0xa8, 0x6e, 0x22,
	0xc7, 0x59, 0xc9, 0x44, 0x28, 0x5f, 0x54, 0x09, 0xf8, 0x5b, 0xb5, 0xce, 0x0e, 0xc6, 0x11, 0x72,
	0xf8, 0x6d, 0xa6, 0xb6, 0x25, 0xe7, 0x16, 0x75, 0x22, 0xdf, 0x78, 0x38, 0x41, 0x76, 0xfe, 0x46,
	0xc3, 0x3d, 0x44, 0xf3, 0x23, 0xfe, 0xd7, 0xca, 0xea, 0x7a, 0x13, 0xad, 0xc8, 0x37, 0x97, 0xd5,
	0x5a, 0xfd, 0x5c, 0xe3, 0xa5, 0xca, 0xf1, 0x19, 0x00, 0x00, 0xff, 0xff, 0x36, 0x7c, 0xdb, 0x14,
	0xdf, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TransmitterClient is the client API for Transmitter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TransmitterClient interface {
	Send(ctx context.Context, in *SendRequest, opts ...grpc.CallOption) (*SendResponse, error)
}

type transmitterClient struct {
	cc grpc.ClientConnInterface
}

func NewTransmitterClient(cc grpc.ClientConnInterface) TransmitterClient {
	return &transmitterClient{cc}
}

func (c *transmitterClient) Send(ctx context.Context, in *SendRequest, opts ...grpc.CallOption) (*SendResponse, error) {
	out := new(SendResponse)
	err := c.cc.Invoke(ctx, "/api.Transmitter/Send", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TransmitterServer is the server API for Transmitter service.
type TransmitterServer interface {
	Send(context.Context, *SendRequest) (*SendResponse, error)
}

// UnimplementedTransmitterServer can be embedded to have forward compatible implementations.
type UnimplementedTransmitterServer struct {
}

func (*UnimplementedTransmitterServer) Send(ctx context.Context, req *SendRequest) (*SendResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Send not implemented")
}

func RegisterTransmitterServer(s *grpc.Server, srv TransmitterServer) {
	s.RegisterService(&_Transmitter_serviceDesc, srv)
}

func _Transmitter_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransmitterServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Transmitter/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransmitterServer).Send(ctx, req.(*SendRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Transmitter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Transmitter",
	HandlerType: (*TransmitterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Send",
			Handler:    _Transmitter_Send_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transmitter.proto",
}
